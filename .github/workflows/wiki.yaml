name: deploy pages and wiki
on:
  gollum:
  push:
    tags:
      - '*'
jobs:
  copy:
    concurrency:
      group: pages-and-wiki
      cancel-in-progress: true
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Copy Wiki Home
        run: |
          git clone $ROOT/$REPO.wiki.git
          cp ${REPO#*/}.wiki/$FILE docs
        env:
          FILE: "Home.md"
          ROOT: "https://github.com"
          REPO: ${{ github.repository }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
  filter:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: read
    steps:
      - name: Ensure empty Home.md
        id: home
        run: |
          JSON=$(curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{github.token}}" \
          $ROOT/repos/$REPO/pages);
          PAGES_URL=$(jq -r '.html_url' <<< $JSON);
          TEXT=$(curl $PAGES_URL/Home.md);
          CONTENTS=$(tr -d "\n" <<< $TEXT);
          echo "Home.md contains $CONTENTS";
          echo "::set-output name=contents::$CONTENTS";
        env:
          ROOT: "https://api.github.com"
          REPO: ${{ github.repository }}
      - name: Read repo description
        id: repo
        run: |
          JSON=$(curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{github.token}}" \
          $ROOT/repos/$REPO);
          CLIENT=$(jq -r '.description' <<< $JSON);
          echo "Using OAuth App $CLIENT";
          echo "::set-output name=client::$CLIENT";
        env:
          ROOT: "https://api.github.com"
          REPO: ${{ github.repository }}
    outputs:
      contents: ${{ steps.home.outputs.contents }}
      client: ${{ steps.repo.outputs.client }}
  activate:
    needs: [filter]
    if: needs.filter.outputs.contents == ''
    permissions:
      contents: read
      pages: write
    concurrency:
      group: secret-tv-access
      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - run: |
          curl \
          -X PUT \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{github.token}}" \
          $ROOT/repos/$REPO/environments/$STAGE
        name: Ensure existing environment
        env:
          ROOT: "https://api.github.com"
          REPO: ${{ github.repository }}
          STAGE: "secret-tv-access"
      - uses: actions/checkout@v3
      - name: Run executable
        run: |
          ./action/index ${{github.token}} $CLIENT_ID
        env:
          CLIENT_ID: ${{ needs.filter.outputs.client }}
